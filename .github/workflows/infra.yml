name: Infrastructure CI/CD

on:
  push:
    branches: [main, develop]
    paths:
      - 'infra/**'
      - '.github/workflows/infra.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'infra/**'

env:
  TERRAFORM_VERSION: '1.6.0'
  AWS_REGION: 'us-east-1'

jobs:
  validate:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}
        
    - name: Terraform Format Check
      working-directory: infra/terraform
      run: terraform fmt -check
      
    - name: Terraform Init
      working-directory: infra/terraform
      run: terraform init -backend=false
      
    - name: Terraform Validate
      working-directory: infra/terraform
      run: terraform validate
      
    - name: Run Checkov (Security Scan)
      uses: bridgecrewio/checkov-action@master
      with:
        directory: infra/terraform
        quiet: true
        soft_fail: true
        
    - name: Validate Kubernetes manifests
      working-directory: infra/kubernetes
      run: |
        # Install kubeval
        curl -L https://github.com/instrumenta/kubeval/releases/latest/download/kubeval-linux-amd64.tar.gz | tar xz
        sudo mv kubeval /usr/local/bin
        
        # Validate all YAML files
        find . -name '*.yaml' -o -name '*.yml' | xargs kubeval
        
  plan-dev:
    if: github.event_name == 'pull_request'
    needs: validate
    runs-on: ubuntu-latest
    environment: development
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Terraform Init
      working-directory: infra/terraform/environments/development
      run: terraform init
      
    - name: Terraform Plan
      working-directory: infra/terraform/environments/development
      run: |
        terraform plan -out=tfplan -detailed-exitcode
        terraform show -json tfplan > plan.json
        
    - name: Upload plan
      uses: actions/upload-artifact@v3
      with:
        name: terraform-plan-dev
        path: infra/terraform/environments/development/plan.json
        
  deploy-dev:
    if: github.ref == 'refs/heads/develop'
    needs: validate
    runs-on: ubuntu-latest
    environment: development
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Terraform Apply
      working-directory: infra/terraform/environments/development
      run: |
        terraform init
        terraform apply -auto-approve
        
  deploy-prod:
    if: github.ref == 'refs/heads/main'
    needs: validate
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Terraform Plan
      working-directory: infra/terraform/environments/production
      run: |
        terraform init
        terraform plan -out=tfplan
        
    - name: Terraform Apply (Manual Approval Required)
      working-directory: infra/terraform/environments/production
      run: terraform apply tfplan