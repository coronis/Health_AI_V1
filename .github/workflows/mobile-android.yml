name: Android CI/CD

on:
  push:
    branches: [main, develop]
    paths:
      - 'apps/mobile/android/**'
      - 'apps/mobile/shared/**'
      - 'packages/design-tokens/**'
  pull_request:
    branches: [main, develop]
    paths:
      - 'apps/mobile/android/**'
      - 'apps/mobile/shared/**'
      - 'packages/design-tokens/**'

env:
  JAVA_VERSION: '17'
  ANDROID_API_LEVEL: '34'
  ANDROID_BUILD_TOOLS: '34.0.0'
  ANDROID_NDK: '25.2.9519653'

jobs:
  lint-and-test:
    name: Lint, Test & Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: ${{ env.ANDROID_API_LEVEL }}
          build-tools: ${{ env.ANDROID_BUILD_TOOLS }}
          ndk: ${{ env.ANDROID_NDK }}

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Setup design tokens
        run: |
          cd packages/design-tokens
          npm install
          npm run build:android

      - name: Copy design tokens to Android project
        run: |
          cp -r packages/design-tokens/dist/android/* apps/mobile/android/app/src/main/java/com/healthcoachai/designsystem/tokens/

      - name: Create Android env file
        run: |
          cat > apps/mobile/android/.env << EOF
          API_BASE_URL=https://api-staging.healthcoachai.com
          FEATURE_FLAGS=chat,photo_log
          ENV=staging
          SENTRY_DSN=${{ secrets.SENTRY_DSN_ANDROID }}
          EOF

      - name: Grant execute permission for gradlew
        run: chmod +x apps/mobile/android/gradlew

      - name: Lint Kotlin code
        run: |
          cd apps/mobile/android
          ./gradlew ktlintCheck

      - name: Run Detekt static analysis
        run: |
          cd apps/mobile/android
          ./gradlew detekt

      - name: Build debug APK
        run: |
          cd apps/mobile/android
          ./gradlew assembleDebug

      - name: Run unit tests
        run: |
          cd apps/mobile/android
          ./gradlew testDebugUnitTest

      - name: Generate test coverage report
        run: |
          cd apps/mobile/android
          ./gradlew createDebugCoverageReport

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: apps/mobile/android/app/build/reports/coverage/debug/report.xml
          flags: android
          name: android-coverage

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: android-test-results
          path: |
            apps/mobile/android/app/build/reports/tests/
            apps/mobile/android/app/build/test-results/

  ui-tests:
    name: UI Tests
    runs-on: macos-latest
    needs: lint-and-test
    
    strategy:
      matrix:
        api-level: [30, 33, 34]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Cache AVD
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -no-snapshot -no-audio -no-boot-anim
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: Setup design tokens
        run: |
          cd packages/design-tokens
          npm install
          npm run build:android

      - name: Copy design tokens to Android project
        run: |
          cp -r packages/design-tokens/dist/android/* apps/mobile/android/app/src/main/java/com/healthcoachai/designsystem/tokens/

      - name: Create Android env file
        run: |
          cat > apps/mobile/android/.env << EOF
          API_BASE_URL=https://api-staging.healthcoachai.com
          FEATURE_FLAGS=chat,photo_log
          ENV=staging
          EOF

      - name: Grant execute permission for gradlew
        run: chmod +x apps/mobile/android/gradlew

      - name: Run instrumented tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          script: |
            cd apps/mobile/android
            ./gradlew connectedDebugAndroidTest

      - name: Upload UI test results
        uses: actions/upload-artifact@v4
        with:
          name: android-ui-test-results-api-${{ matrix.api-level }}
          path: |
            apps/mobile/android/app/build/reports/androidTests/
            apps/mobile/android/app/build/outputs/androidTest-results/

  screenshot-tests:
    name: Screenshot Tests
    runs-on: macos-latest
    needs: lint-and-test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Setup design tokens
        run: |
          cd packages/design-tokens
          npm install
          npm run build:android

      - name: Copy design tokens to Android project
        run: |
          cp -r packages/design-tokens/dist/android/* apps/mobile/android/app/src/main/java/com/healthcoachai/designsystem/tokens/

      - name: Grant execute permission for gradlew
        run: chmod +x apps/mobile/android/gradlew

      - name: Run screenshot tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          script: |
            cd apps/mobile/android
            ./gradlew executeScreenshotTests

      - name: Upload screenshot failures
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: android-screenshot-failures
          path: apps/mobile/android/app/build/reports/screenshots/

  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Grant execute permission for gradlew
        run: chmod +x apps/mobile/android/gradlew

      - name: Run OWASP dependency check
        run: |
          cd apps/mobile/android
          ./gradlew dependencyCheckAnalyze

      - name: Run MobSF security scan
        run: |
          cd apps/mobile/android
          ./gradlew assembleDebug
          pip3 install mobsf-cli
          mobsf-cli scan --source app/build/outputs/apk/debug/app-debug.apk --type android --format json --output security-report.json

      - name: Upload security reports
        uses: actions/upload-artifact@v4
        with:
          name: android-security-reports
          path: |
            apps/mobile/android/build/reports/dependency-check-report.html
            apps/mobile/android/security-report.json

  build-release:
    name: Build Release
    runs-on: ubuntu-latest
    needs: [lint-and-test, ui-tests, screenshot-tests, security-scan]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Setup design tokens
        run: |
          cd packages/design-tokens
          npm install
          npm run build:android

      - name: Copy design tokens to Android project
        run: |
          cp -r packages/design-tokens/dist/android/* apps/mobile/android/app/src/main/java/com/healthcoachai/designsystem/tokens/

      - name: Decode Keystore
        run: |
          echo ${{ secrets.ANDROID_KEYSTORE_BASE64 }} | base64 -d > apps/mobile/android/app/keystore.jks

      - name: Set environment variables
        run: |
          ENVIRONMENT=$([[ "${{ github.ref }}" == "refs/heads/main" ]] && echo "production" || echo "staging")
          API_BASE_URL=$([[ "$ENVIRONMENT" == "production" ]] && echo "https://api.healthcoachai.com" || echo "https://api-staging.healthcoachai.com")
          
          cat > apps/mobile/android/.env << EOF
          API_BASE_URL=$API_BASE_URL
          FEATURE_FLAGS=chat,photo_log
          ENV=$ENVIRONMENT
          SENTRY_DSN=${{ secrets.SENTRY_DSN_ANDROID }}
          EOF

      - name: Grant execute permission for gradlew
        run: chmod +x apps/mobile/android/gradlew

      - name: Build release APK
        run: |
          cd apps/mobile/android
          ./gradlew assembleRelease
        env:
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}

      - name: Build release AAB
        run: |
          cd apps/mobile/android
          ./gradlew bundleRelease
        env:
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}

      - name: Sign APK
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: apps/mobile/android/app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          alias: ${{ secrets.ANDROID_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}

      - name: Upload to Play Console Internal Testing
        if: github.ref == 'refs/heads/develop'
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
          packageName: com.healthcoachai.app
          releaseFiles: apps/mobile/android/app/build/outputs/bundle/release/app-release.aab
          track: internal
          status: completed

      - name: Upload to Play Console Production
        if: github.ref == 'refs/heads/main'
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
          packageName: com.healthcoachai.app
          releaseFiles: apps/mobile/android/app/build/outputs/bundle/release/app-release.aab
          track: production
          status: draft

      - name: Upload APK and AAB artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-release-artifacts
          path: |
            apps/mobile/android/app/build/outputs/apk/release/*.apk
            apps/mobile/android/app/build/outputs/bundle/release/*.aab

  performance-test:
    name: Performance Testing
    runs-on: macos-latest
    needs: build-release
    if: github.ref == 'refs/heads/develop'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Setup design tokens
        run: |
          cd packages/design-tokens
          npm install
          npm run build:android

      - name: Copy design tokens to Android project
        run: |
          cp -r packages/design-tokens/dist/android/* apps/mobile/android/app/src/main/java/com/healthcoachai/designsystem/tokens/

      - name: Grant execute permission for gradlew
        run: chmod +x apps/mobile/android/gradlew

      - name: Run performance tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          profile: pixel_3a
          ram-size: 4096M
          script: |
            cd apps/mobile/android
            ./gradlew connectedPerformanceTest

      - name: Analyze performance results
        run: |
          cd apps/mobile/android
          ./gradlew analyzePerformanceResults

      - name: Upload performance results
        uses: actions/upload-artifact@v4
        with:
          name: android-performance-results
          path: |
            apps/mobile/android/app/build/reports/performance/
            apps/mobile/android/app/build/outputs/performance/

  accessibility-test:
    name: Accessibility Testing
    runs-on: macos-latest
    needs: lint-and-test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Setup design tokens
        run: |
          cd packages/design-tokens
          npm install
          npm run build:android

      - name: Copy design tokens to Android project
        run: |
          cp -r packages/design-tokens/dist/android/* apps/mobile/android/app/src/main/java/com/healthcoachai/designsystem/tokens/

      - name: Grant execute permission for gradlew
        run: chmod +x apps/mobile/android/gradlew

      - name: Run accessibility tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          script: |
            cd apps/mobile/android
            ./gradlew connectedAccessibilityTest

      - name: Upload accessibility results
        uses: actions/upload-artifact@v4
        with:
          name: android-accessibility-results
          path: |
            apps/mobile/android/app/build/reports/accessibility/
            apps/mobile/android/app/build/outputs/accessibility/

  notification:
    name: Slack Notification
    runs-on: ubuntu-latest
    needs: [build-release, performance-test, accessibility-test]
    if: always() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
      - name: Notify Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: '#mobile-deployments'
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
          fields: repo,message,commit,author,action,eventName,ref,workflow