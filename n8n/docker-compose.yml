version: '3.8'

services:
  # PostgreSQL Database for n8n
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: n8n
      POSTGRES_USER: n8n
      POSTGRES_PASSWORD: n8n_password
      POSTGRES_NON_ROOT_USER: n8n
      POSTGRES_NON_ROOT_PASSWORD: n8n_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U n8n -d n8n']
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - n8n-network

  # Redis for n8n queue and caching
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --requirepass redis_password
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - n8n-network

  # n8n Main Application
  n8n:
    image: n8nio/n8n:latest
    restart: unless-stopped
    environment:
      # Database Configuration
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: postgres
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: n8n
      DB_POSTGRESDB_USER: n8n
      DB_POSTGRESDB_PASSWORD: n8n_password
      DB_POSTGRESDB_SCHEMA: public

      # Redis Configuration
      QUEUE_BULL_REDIS_HOST: redis
      QUEUE_BULL_REDIS_PORT: 6379
      QUEUE_BULL_REDIS_PASSWORD: redis_password
      QUEUE_BULL_REDIS_DB: 0

      # n8n Configuration
      N8N_HOST: localhost
      N8N_PROTOCOL: http
      N8N_PORT: 5678
      N8N_LISTEN_ADDRESS: 0.0.0.0

      # Authentication
      N8N_BASIC_AUTH_ACTIVE: true
      N8N_BASIC_AUTH_USER: admin
      N8N_BASIC_AUTH_PASSWORD: changeme

      # Security
      N8N_SECURE_COOKIE: false
      N8N_ENCRYPTION_KEY: very-long-encryption-key-for-n8n-instance

      # Logging
      N8N_LOG_LEVEL: info
      N8N_LOG_OUTPUT: console

      # Workflow Configuration
      WORKFLOWS_DEFAULT_NAME: 'My Workflow'
      N8N_DEFAULT_BINARY_DATA_MODE: filesystem
      N8N_BINARY_DATA_TTL: 24

      # External Services Configuration
      HEALTHCOACHAI_API_BASE_URL: http://host.docker.internal:8080
      HEALTHCOACHAI_API_KEY: demo-api-key

      # AI Provider Configuration (Demo Keys)
      OPENAI_API_KEY: sk-demo-openai-key
      ANTHROPIC_API_KEY: sk-ant-demo-anthropic-key
      GOOGLE_VERTEX_PROJECT: demo-project-id
      GOOGLE_APPLICATION_CREDENTIALS_B64: demo-service-account-json-base64

      # External Integration Configuration
      WEATHER_API_KEY: demo-weather-api-key
      FITBIT_CLIENT_ID: demo-fitbit-client-id
      FITBIT_CLIENT_SECRET: demo-fitbit-client-secret

      # Feature Flags
      N8N_PERSONALIZATION_ENABLED: false
      N8N_VERSION_NOTIFICATIONS_ENABLED: false
      N8N_DIAGNOSTICS_ENABLED: false
      N8N_HIRING_BANNER_ENABLED: false

      # Performance Configuration
      N8N_PAYLOAD_SIZE_MAX: 16
      EXECUTIONS_DATA_PRUNE: true
      EXECUTIONS_DATA_MAX_AGE: 336

    ports:
      - '5678:5678'
    volumes:
      - n8n_data:/home/node/.n8n
      - ./workflows:/home/node/.n8n/workflows
      - ./credentials:/home/node/.n8n/credentials
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - n8n-network
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:5678/healthz || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # n8n Worker (for handling queue jobs)
  n8n-worker:
    image: n8nio/n8n:latest
    restart: unless-stopped
    command: worker
    environment:
      # Database Configuration
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: postgres
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: n8n
      DB_POSTGRESDB_USER: n8n
      DB_POSTGRESDB_PASSWORD: n8n_password
      DB_POSTGRESDB_SCHEMA: public

      # Redis Configuration
      QUEUE_BULL_REDIS_HOST: redis
      QUEUE_BULL_REDIS_PORT: 6379
      QUEUE_BULL_REDIS_PASSWORD: redis_password
      QUEUE_BULL_REDIS_DB: 0

      # Worker Configuration
      N8N_ENCRYPTION_KEY: very-long-encryption-key-for-n8n-instance
      EXECUTIONS_MODE: queue

      # Logging
      N8N_LOG_LEVEL: info
      N8N_LOG_OUTPUT: console

      # External Services Configuration
      HEALTHCOACHAI_API_BASE_URL: http://host.docker.internal:8080
      HEALTHCOACHAI_API_KEY: demo-api-key

      # AI Provider Configuration (Demo Keys)
      OPENAI_API_KEY: sk-demo-openai-key
      ANTHROPIC_API_KEY: sk-ant-demo-anthropic-key
      GOOGLE_VERTEX_PROJECT: demo-project-id
      GOOGLE_APPLICATION_CREDENTIALS_B64: demo-service-account-json-base64

      # Performance Configuration
      N8N_PAYLOAD_SIZE_MAX: 16

    volumes:
      - n8n_data:/home/node/.n8n
      - ./workflows:/home/node/.n8n/workflows
      - ./credentials:/home/node/.n8n/credentials
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - n8n-network

  # Webhook Proxy (for development)
  webhook-proxy:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - '8080:80'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - n8n
    networks:
      - n8n-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  n8n_data:
    driver: local

networks:
  n8n-network:
    driver: bridge
